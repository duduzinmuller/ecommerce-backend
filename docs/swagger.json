{
  "swagger": "2.0",
  "info": {
    "title": "Ecommerce API",
    "description": "API for Ecommerce",
    "author": "Eduardo M.",
    "version": "1.0.0"
  },
  "securityDefinitions": {
    "BearerAuth": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header",
      "description": "Enter 'Bearer' followed by your token. Example: 'Bearer eyJhbGciOiJIUzI1NiIsInR...'"
    }
  },
  "security": [
    {
      "BearerAuth": []
    }
  ],
  "paths": {
    "/api/users": {
      "post": {
        "summary": "Create a new user",
        "tags": ["User"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/CreateUserParams" }
          }
        ],
        "responses": {
          "201": {
            "description": "User created",
            "schema": { "$ref": "#/definitions/UserWithToken" }
          },
          "400": {
            "description": "Invalid params",
            "schema": { "$ref": "#/definitions/InvalidParamsResponse" }
          }
        }
      }
    },
    "/api/users/login": {
      "post": {
        "summary": "Login user",
        "tags": ["User"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/LoginUserParams" }
          }
        ],
        "responses": {
          "200": {
            "description": "Login successful",
            "schema": { "$ref": "#/definitions/UserWithToken" }
          },
          "401": {
            "description": "Invalid credentials",
            "schema": { "$ref": "#/definitions/UnauthorizedErrorResponse" }
          }
        }
      }
    },
    "/api/users/me": {
      "get": {
        "summary": "Get authenticated user",
        "tags": ["User"],
        "responses": {
          "200": {
            "description": "User found",
            "schema": { "$ref": "#/definitions/User" }
          },
          "404": {
            "description": "User not found",
            "schema": { "$ref": "#/definitions/NotFoundResponse" }
          }
        },
        "security": [{ "BearerAuth": [] }]
      },
      "delete": {
        "summary": "Delete authenticated user",
        "tags": ["User"],
        "responses": {
          "200": {
            "description": "User deleted",
            "schema": { "$ref": "#/definitions/User" }
          },
          "404": {
            "description": "User not found",
            "schema": { "$ref": "#/definitions/NotFoundResponse" }
          }
        },
        "security": [{ "BearerAuth": [] }]
      }
    },
    "/api/categories": {
      "get": {
        "summary": "List all categories",
        "tags": ["Category"],
        "responses": {
          "200": {
            "description": "Categories found",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Category" }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new category",
        "tags": ["Category"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/CreateCategoryParams" }
          }
        ],
        "responses": {
          "201": {
            "description": "Category created",
            "schema": { "$ref": "#/definitions/Category" }
          }
        }
      }
    },
    "/api/categories/{id}": {
      "get": {
        "summary": "Get category by ID",
        "tags": ["Category"],
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "Category found",
            "schema": { "$ref": "#/definitions/Category" }
          },
          "404": {
            "description": "Category not found",
            "schema": { "$ref": "#/definitions/NotFoundResponse" }
          }
        }
      }
    },
    "/api/categories/slug/{slug}": {
      "get": {
        "summary": "Get category by slug",
        "tags": ["Category"],
        "parameters": [
          { "name": "slug", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "Category found",
            "schema": { "$ref": "#/definitions/Category" }
          },
          "404": {
            "description": "Category not found",
            "schema": { "$ref": "#/definitions/NotFoundResponse" }
          }
        }
      },
      "delete": {
        "summary": "Delete category by slug",
        "tags": ["Category"],
        "parameters": [
          { "name": "slug", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": { "description": "Category deleted" },
          "404": {
            "description": "Category not found",
            "schema": { "$ref": "#/definitions/NotFoundResponse" }
          }
        },
        "security": [{ "BearerAuth": [] }]
      }
    },
    "/api/products": {
      "get": {
        "summary": "List all products",
        "tags": ["Product"],
        "responses": {
          "200": {
            "description": "Products found",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Product" }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new product",
        "tags": ["Product"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/CreateProductParams" }
          }
        ],
        "responses": {
          "201": {
            "description": "Product created",
            "schema": { "$ref": "#/definitions/Product" }
          }
        }
      }
    },
    "/api/products/{id}": {
      "get": {
        "summary": "Get product by ID",
        "tags": ["Product"],
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "Product found",
            "schema": { "$ref": "#/definitions/Product" }
          },
          "404": {
            "description": "Product not found",
            "schema": { "$ref": "#/definitions/NotFoundResponse" }
          }
        }
      }
    },
    "/api/products/slug/{slug}": {
      "get": {
        "summary": "Get product by slug",
        "tags": ["Product"],
        "parameters": [
          { "name": "slug", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "Product found",
            "schema": { "$ref": "#/definitions/Product" }
          },
          "404": {
            "description": "Product not found",
            "schema": { "$ref": "#/definitions/NotFoundResponse" }
          }
        }
      },
      "patch": {
        "summary": "Update product by slug",
        "tags": ["Product"],
        "parameters": [
          { "name": "slug", "in": "path", "required": true, "type": "string" },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/UpdateProductParams" }
          }
        ],
        "responses": {
          "200": {
            "description": "Product updated",
            "schema": { "$ref": "#/definitions/Product" }
          },
          "404": {
            "description": "Product not found",
            "schema": { "$ref": "#/definitions/NotFoundResponse" }
          }
        },
        "security": [{ "BearerAuth": [] }]
      },
      "delete": {
        "summary": "Delete product by slug",
        "tags": ["Product"],
        "parameters": [
          { "name": "slug", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": { "description": "Product deleted" },
          "404": {
            "description": "Product not found",
            "schema": { "$ref": "#/definitions/NotFoundResponse" }
          }
        },
        "security": [{ "BearerAuth": [] }]
      }
    },
    "/api/products/search": {
      "get": {
        "summary": "Search product by name",
        "tags": ["Product"],
        "parameters": [
          { "name": "name", "in": "query", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "Products found",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Product" }
            }
          },
          "404": {
            "description": "Product not found",
            "schema": { "$ref": "#/definitions/NotFoundResponse" }
          }
        }
      }
    },
    "/api/carts": {
      "post": {
        "summary": "Create a new cart",
        "tags": ["Cart"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/CreateCartParams" }
          }
        ],
        "responses": {
          "201": {
            "description": "Cart created",
            "schema": { "$ref": "#/definitions/Cart" }
          }
        },
        "security": [{ "BearerAuth": [] }]
      }
    },
    "/api/carts/user/{userId}": {
      "get": {
        "summary": "Get cart by user ID",
        "tags": ["Cart"],
        "parameters": [
          { "name": "userId", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "Cart found",
            "schema": { "$ref": "#/definitions/Cart" }
          },
          "404": {
            "description": "Cart not found",
            "schema": { "$ref": "#/definitions/NotFoundResponse" }
          }
        },
        "security": [{ "BearerAuth": [] }]
      }
    },
    "/api/cart-items": {
      "post": {
        "summary": "Create a new cart item",
        "tags": ["CartItem"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/CreateCartItemParams" }
          }
        ],
        "responses": {
          "201": {
            "description": "Cart item created",
            "schema": { "$ref": "#/definitions/CartItem" }
          }
        },
        "security": [{ "BearerAuth": [] }]
      },
      "get": {
        "summary": "Get all cart items",
        "tags": ["CartItem"],
        "responses": {
          "200": {
            "description": "Cart items found",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/CartItem" }
            }
          }
        },
        "security": [{ "BearerAuth": [] }]
      }
    },
    "/api/cart-items/{id}": {
      "patch": {
        "summary": "Update cart item by ID",
        "tags": ["CartItem"],
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/UpdateCartItemParams" }
          }
        ],
        "responses": {
          "200": {
            "description": "Cart item updated",
            "schema": { "$ref": "#/definitions/CartItem" }
          },
          "404": {
            "description": "Cart item not found",
            "schema": { "$ref": "#/definitions/NotFoundResponse" }
          }
        },
        "security": [{ "BearerAuth": [] }]
      },
      "delete": {
        "summary": "Delete cart item by ID",
        "tags": ["CartItem"],
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": { "description": "Cart item deleted" },
          "404": {
            "description": "Cart item not found",
            "schema": { "$ref": "#/definitions/NotFoundResponse" }
          }
        },
        "security": [{ "BearerAuth": [] }]
      }
    },
    "/api/orders": {
      "post": {
        "summary": "Create a new order",
        "tags": ["Order"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/CreateOrderParams" }
          }
        ],
        "responses": {
          "201": {
            "description": "Order created",
            "schema": { "$ref": "#/definitions/Order" }
          }
        },
        "security": [{ "BearerAuth": [] }]
      }
    },
    "/api/orders/user/{userId}": {
      "get": {
        "summary": "Get orders by user ID",
        "tags": ["Order"],
        "parameters": [
          { "name": "userId", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "Orders found",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Order" }
            }
          },
          "404": {
            "description": "Order not found",
            "schema": { "$ref": "#/definitions/NotFoundResponse" }
          }
        },
        "security": [{ "BearerAuth": [] }]
      }
    },
    "/api/orders/{id}": {
      "patch": {
        "summary": "Update order by ID",
        "tags": ["Order"],
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/UpdateOrderParams" }
          }
        ],
        "responses": {
          "200": {
            "description": "Order updated",
            "schema": { "$ref": "#/definitions/Order" }
          },
          "404": {
            "description": "Order not found",
            "schema": { "$ref": "#/definitions/NotFoundResponse" }
          }
        },
        "security": [{ "BearerAuth": [] }]
      },
      "delete": {
        "summary": "Delete order by ID",
        "tags": ["Order"],
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": { "description": "Order deleted" },
          "404": {
            "description": "Order not found",
            "schema": { "$ref": "#/definitions/NotFoundResponse" }
          }
        },
        "security": [{ "BearerAuth": [] }]
      }
    },
    "/api/payments": {
      "post": {
        "summary": "Create a new payment",
        "tags": ["Payment"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/CreatePaymentParams" }
          }
        ],
        "responses": {
          "201": {
            "description": "Payment created",
            "schema": { "$ref": "#/definitions/Payment" }
          }
        },
        "security": [{ "BearerAuth": [] }]
      }
    }
  },
  "definitions": {
    "CreateUserParams": {
      "type": "object",
      "properties": {
        "name": { "type": "string", "example": "Eduardo" },
        "email": { "type": "string", "example": "eduardo@email.com" },
        "password": { "type": "string", "example": "senha123" }
      }
    },
    "LoginUserParams": {
      "type": "object",
      "properties": {
        "email": { "type": "string", "example": "eduardo@email.com" },
        "password": { "type": "string", "example": "senha123" }
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "id": { "type": "string", "example": "uuid" },
        "name": { "type": "string", "example": "Eduardo" },
        "email": { "type": "string", "example": "eduardo@email.com" }
      }
    },
    "UserWithToken": {
      "allOf": [
        { "$ref": "#/definitions/User" },
        {
          "type": "object",
          "properties": {
            "token": { "type": "string", "example": "jwt.token.here" }
          }
        }
      ]
    },
    "Category": {
      "type": "object",
      "properties": {
        "id": { "type": "string", "example": "uuid" },
        "name": { "type": "string", "example": "Eletrônicos" },
        "slug": { "type": "string", "example": "eletronicos" }
      }
    },
    "CreateCategoryParams": {
      "type": "object",
      "properties": {
        "name": { "type": "string", "example": "Eletrônicos" }
      }
    },
    "Product": {
      "type": "object",
      "properties": {
        "id": { "type": "string", "example": "uuid" },
        "name": { "type": "string", "example": "Notebook" },
        "price": { "type": "number", "example": 3500 },
        "categoryId": { "type": "string", "example": "uuid" },
        "slug": { "type": "string", "example": "notebook" }
      }
    },
    "CreateProductParams": {
      "type": "object",
      "properties": {
        "name": { "type": "string", "example": "Notebook" },
        "price": { "type": "number", "example": 3500 },
        "categoryId": { "type": "string", "example": "uuid" }
      }
    },
    "UpdateProductParams": {
      "type": "object",
      "properties": {
        "name": { "type": "string", "example": "Notebook" },
        "price": { "type": "number", "example": 3500 },
        "categoryId": { "type": "string", "example": "uuid" }
      }
    },
    "Cart": {
      "type": "object",
      "properties": {
        "id": { "type": "string", "example": "uuid" },
        "userId": { "type": "string", "example": "uuid" }
      }
    },
    "CreateCartParams": {
      "type": "object",
      "properties": {
        "userId": { "type": "string", "example": "uuid" }
      }
    },
    "CartItem": {
      "type": "object",
      "properties": {
        "id": { "type": "string", "example": "uuid" },
        "cartId": { "type": "string", "example": "uuid" },
        "productId": { "type": "string", "example": "uuid" },
        "quantity": { "type": "number", "example": 2 }
      }
    },
    "CreateCartItemParams": {
      "type": "object",
      "properties": {
        "cartId": { "type": "string", "example": "uuid" },
        "productId": { "type": "string", "example": "uuid" },
        "quantity": { "type": "number", "example": 2 }
      }
    },
    "UpdateCartItemParams": {
      "type": "object",
      "properties": {
        "quantity": { "type": "number", "example": 3 }
      }
    },
    "Order": {
      "type": "object",
      "properties": {
        "id": { "type": "string", "example": "uuid" },
        "userId": { "type": "string", "example": "uuid" },
        "status": { "type": "string", "example": "pending" }
      }
    },
    "CreateOrderParams": {
      "type": "object",
      "properties": {
        "userId": { "type": "string", "example": "uuid" },
        "cartId": { "type": "string", "example": "uuid" }
      }
    },
    "UpdateOrderParams": {
      "type": "object",
      "properties": {
        "status": { "type": "string", "example": "completed" }
      }
    },
    "Payment": {
      "type": "object",
      "properties": {
        "id": { "type": "string", "example": "uuid" },
        "orderId": { "type": "string", "example": "uuid" },
        "amount": { "type": "number", "example": 3500 }
      }
    },
    "CreatePaymentParams": {
      "type": "object",
      "properties": {
        "orderId": { "type": "string", "example": "uuid" },
        "amount": { "type": "number", "example": 3500 }
      }
    },
    "InvalidParamsResponse": {
      "type": "object",
      "properties": {
        "message": { "type": "string", "example": "Parâmetro inválido" }
      }
    },
    "UnauthorizedErrorResponse": {
      "type": "object",
      "properties": {
        "message": { "type": "string", "example": "Unauthorized" }
      }
    },
    "NotFoundResponse": {
      "type": "object",
      "properties": {
        "message": { "type": "string", "example": "Not found" }
      }
    }
  }
}
