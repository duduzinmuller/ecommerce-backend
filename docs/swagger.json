{
  "swagger": "2.0",
  "info": {
    "title": "Ecommerce API",
    "description": "API for Ecommerce",
    "version": "1.0.0"
  },
  "securityDefinitions": {
    "BearerAuth": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header",
      "description": "Enter 'Bearer' followed by your token. Example: 'Bearer eyJhbGciOiJIUzI1NiIsInR...'"
    }
  },
  "security": [
    {
      "BearerAuth": []
    }
  ],
  "paths": {
    "/api/users": {
      "post": {
        "summary": "Create a new user",
        "tags": ["User"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/CreateUserParams" }
          }
        ],
        "responses": {
          "201": {
            "description": "User created",
            "schema": { "$ref": "#/definitions/UserWithToken" }
          },
          "400": {
            "description": "Invalid params",
            "schema": { "$ref": "#/definitions/InvalidParamsResponse" }
          }
        }
      }
    },
    "/api/users/login": {
      "post": {
        "summary": "Login user",
        "tags": ["User"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/LoginUserParams" }
          }
        ],
        "responses": {
          "200": {
            "description": "Login successful",
            "schema": { "$ref": "#/definitions/UserWithToken" }
          },
          "401": {
            "description": "Invalid credentials",
            "schema": { "$ref": "#/definitions/UnauthorizedErrorResponse" }
          }
        }
      }
    },
    "/api/users/me": {
      "get": {
        "summary": "Get authenticated user",
        "tags": ["User"],
        "responses": {
          "200": {
            "description": "User found",
            "schema": { "$ref": "#/definitions/User" }
          },
          "404": {
            "description": "User not found",
            "schema": { "$ref": "#/definitions/NotFoundResponse" }
          }
        },
        "security": [{ "BearerAuth": [] }]
      },
      "delete": {
        "summary": "Delete authenticated user",
        "tags": ["User"],
        "responses": {
          "200": {
            "description": "User deleted",
            "schema": { "$ref": "#/definitions/User" }
          },
          "404": {
            "description": "User not found",
            "schema": { "$ref": "#/definitions/NotFoundResponse" }
          }
        },
        "security": [{ "BearerAuth": [] }]
      }
    },
    "/api/categories": {
      "get": {
        "summary": "List all categories",
        "tags": ["Category"],
        "responses": {
          "200": {
            "description": "Categories found",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Category" }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new category",
        "tags": ["Category"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/CreateCategoryParams" }
          }
        ],
        "responses": {
          "201": {
            "description": "Category created",
            "schema": { "$ref": "#/definitions/Category" }
          }
        }
      }
    },
    "/api/categories/{id}": {
      "get": {
        "summary": "Get category by ID",
        "tags": ["Category"],
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "Category found",
            "schema": { "$ref": "#/definitions/Category" }
          },
          "404": {
            "description": "Category not found",
            "schema": { "$ref": "#/definitions/NotFoundResponse" }
          }
        }
      }
    },
    "/api/categories/slug/{slug}": {
      "get": {
        "summary": "Get category by slug",
        "tags": ["Category"],
        "parameters": [
          { "name": "slug", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "Category found",
            "schema": { "$ref": "#/definitions/Category" }
          },
          "404": {
            "description": "Category not found",
            "schema": { "$ref": "#/definitions/NotFoundResponse" }
          }
        }
      },
      "delete": {
        "summary": "Delete category by slug",
        "tags": ["Category"],
        "parameters": [
          { "name": "slug", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": { "description": "Category deleted" },
          "404": {
            "description": "Category not found",
            "schema": { "$ref": "#/definitions/NotFoundResponse" }
          }
        },
        "security": [{ "BearerAuth": [] }]
      }
    },
    "/api/products": {
      "get": {
        "summary": "List all products",
        "tags": ["Product"],
        "responses": {
          "200": {
            "description": "Products found",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Product" }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new product",
        "tags": ["Product"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/CreateProductParams" }
          }
        ],
        "responses": {
          "201": {
            "description": "Product created",
            "schema": { "$ref": "#/definitions/Product" }
          }
        }
      }
    },
    "/api/products/{id}": {
      "get": {
        "summary": "Get product by ID",
        "tags": ["Product"],
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "Product found",
            "schema": { "$ref": "#/definitions/Product" }
          },
          "404": {
            "description": "Product not found",
            "schema": { "$ref": "#/definitions/NotFoundResponse" }
          }
        }
      }
    },
    "/api/products/slug/{slug}": {
      "get": {
        "summary": "Get product by slug",
        "tags": ["Product"],
        "parameters": [
          { "name": "slug", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "Product found",
            "schema": { "$ref": "#/definitions/Product" }
          },
          "404": {
            "description": "Product not found",
            "schema": { "$ref": "#/definitions/NotFoundResponse" }
          }
        }
      },
      "patch": {
        "summary": "Update product by slug",
        "tags": ["Product"],
        "parameters": [
          { "name": "slug", "in": "path", "required": true, "type": "string" },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/UpdateProductParams" }
          }
        ],
        "responses": {
          "200": {
            "description": "Product updated",
            "schema": { "$ref": "#/definitions/Product" }
          },
          "404": {
            "description": "Product not found",
            "schema": { "$ref": "#/definitions/NotFoundResponse" }
          }
        },
        "security": [{ "BearerAuth": [] }]
      },
      "delete": {
        "summary": "Delete product by slug",
        "tags": ["Product"],
        "parameters": [
          { "name": "slug", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": { "description": "Product deleted" },
          "404": {
            "description": "Product not found",
            "schema": { "$ref": "#/definitions/NotFoundResponse" }
          }
        },
        "security": [{ "BearerAuth": [] }]
      }
    },
    "/api/products/search": {
      "get": {
        "summary": "Search product by name",
        "tags": ["Product"],
        "parameters": [
          {
            "name": "productName",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Nome do produto para buscar"
          }
        ],
        "responses": {
          "200": {
            "description": "Products found",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Product" }
            }
          },
          "404": {
            "description": "Product not found",
            "schema": { "$ref": "#/definitions/NotFoundResponse" }
          }
        }
      }
    },
    "/api/carts": {
      "post": {
        "summary": "Create a new cart",
        "tags": ["Cart"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/CreateCartParams" }
          }
        ],
        "responses": {
          "201": {
            "description": "Cart created",
            "schema": { "$ref": "#/definitions/Cart" }
          }
        },
        "security": [{ "BearerAuth": [] }]
      }
    },
    "/api/carts/me": {
      "get": {
        "summary": "Get cart by user ID",
        "tags": ["Cart"],
        "parameters": [
          { "name": "userId", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "Cart found",
            "schema": { "$ref": "#/definitions/Cart" }
          },
          "404": {
            "description": "Cart not found",
            "schema": { "$ref": "#/definitions/NotFoundResponse" }
          }
        },
        "security": [{ "BearerAuth": [] }]
      }
    },
    "/api/cart-items": {
      "post": {
        "summary": "Create a new cart item",
        "tags": ["CartItem"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/CreateCartItemParams" }
          }
        ],
        "responses": {
          "201": {
            "description": "Cart item created",
            "schema": { "$ref": "#/definitions/CartItem" }
          }
        },
        "security": [{ "BearerAuth": [] }]
      },
      "get": {
        "summary": "Get all cart items",
        "tags": ["CartItem"],
        "responses": {
          "200": {
            "description": "Cart items found",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/CartItem" }
            }
          }
        },
        "security": [{ "BearerAuth": [] }]
      }
    },
    "/api/cart-items/{id}": {
      "patch": {
        "summary": "Update cart item by ID",
        "tags": ["CartItem"],
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/UpdateCartItemParams" }
          }
        ],
        "responses": {
          "200": {
            "description": "Cart item updated",
            "schema": { "$ref": "#/definitions/CartItem" }
          },
          "404": {
            "description": "Cart item not found",
            "schema": { "$ref": "#/definitions/NotFoundResponse" }
          }
        },
        "security": [{ "BearerAuth": [] }]
      },
      "delete": {
        "summary": "Delete cart item by ID",
        "tags": ["CartItem"],
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": { "description": "Cart item deleted" },
          "404": {
            "description": "Cart item not found",
            "schema": { "$ref": "#/definitions/NotFoundResponse" }
          }
        },
        "security": [{ "BearerAuth": [] }]
      }
    },
    "/api/orders": {
      "post": {
        "summary": "Create a new order",
        "tags": ["Order"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/CreateOrderParams" }
          }
        ],
        "responses": {
          "201": {
            "description": "Order created",
            "schema": { "$ref": "#/definitions/Order" }
          }
        },
        "security": [{ "BearerAuth": [] }]
      }
    },
    "/api/orders/me": {
      "get": {
        "summary": "Get orders by user ID",
        "tags": ["Order"],
        "responses": {
          "200": {
            "description": "Orders found",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Order" }
            }
          },
          "404": {
            "description": "Order not found",
            "schema": { "$ref": "#/definitions/NotFoundResponse" }
          }
        },
        "security": [{ "BearerAuth": [] }]
      }
    },
    "/api/orders/{id}": {
      "patch": {
        "summary": "Update order by ID",
        "tags": ["Order"],
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/UpdateOrderParams" }
          }
        ],
        "responses": {
          "200": {
            "description": "Order updated",
            "schema": { "$ref": "#/definitions/Order" }
          },
          "404": {
            "description": "Order not found",
            "schema": { "$ref": "#/definitions/NotFoundResponse" }
          }
        },
        "security": [{ "BearerAuth": [] }]
      },
      "delete": {
        "summary": "Delete order by ID",
        "tags": ["Order"],
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": { "description": "Order deleted" },
          "404": {
            "description": "Order not found",
            "schema": { "$ref": "#/definitions/NotFoundResponse" }
          }
        },
        "security": [{ "BearerAuth": [] }]
      }
    },
    "/api/payments": {
      "post": {
        "summary": "Create a new payment",
        "tags": ["Payment"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/CreatePaymentParams" }
          }
        ],
        "responses": {
          "201": {
            "description": "Payment created",
            "schema": { "$ref": "#/definitions/Payment" }
          }
        },
        "security": [{ "BearerAuth": [] }]
      }
    }
  },
  "definitions": {
    "CreateUserParams": {
      "type": "object",
      "properties": {
        "name": { "type": "string", "example": "Eduardo" },
        "email": { "type": "string", "example": "eduardo@email.com" },
        "password": { "type": "string", "example": "senha123" }
      }
    },
    "LoginUserParams": {
      "type": "object",
      "properties": {
        "email": { "type": "string", "example": "eduardo@email.com" },
        "password": { "type": "string", "example": "senha123" }
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "54e45c67-aca3-4d37-ae9b-37693a7b5848"
        },
        "name": { "type": "string", "example": "Eduardo" },
        "email": { "type": "string", "example": "eduardo@email.com" }
      }
    },
    "UserWithToken": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "54e45c67-aca3-4d37-ae9b-37693a7b5848"
        },
        "name": { "type": "string", "example": "Eduardo" },
        "email": { "type": "string", "example": "eduardo@email.com" },
        "password": {
          "type": "string",
          "example": "$2b$10$e3lKBQfdHZbwkqHYQcGvy.106XANVZvhiin22K6j/2CUzjoqVu26u"
        },
        "asaas_customer_id": {
          "type": "string",
          "example": "cus_000007000110"
        },
        "created_at": {
          "type": "string",
          "example": "2025-09-06T03:30:15.841Z"
        },
        "updated_at": {
          "type": "string",
          "example": "2025-09-06T03:30:15.841Z"
        },
        "tokens": {
          "type": "object",
          "properties": {
            "accessToken": {
              "type": "string",
              "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
            },
            "refreshToken": {
              "type": "string",
              "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
            }
          }
        }
      }
    },
    "Category": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "9677869a-ea2a-4f54-b41c-fad2278799f9"
        },
        "name": { "type": "string", "example": "Notebooks" },
        "slug": { "type": "string", "example": "notebooks" },
        "products": {
          "type": "array",
          "items": { "$ref": "#/definitions/Product" }
        }
      }
    },
    "CreateCategoryParams": {
      "type": "object",
      "properties": {
        "name": { "type": "string", "example": "Eletrônicos" },
        "slug": { "type": "string", "example": "eletronicos" }
      }
    },
    "Product": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "c3678e2b-6b4a-44e5-aaaa-96f810aa9bba"
        },
        "name": { "type": "string", "example": "Asus Vivobook 15" },
        "slug": { "type": "string", "example": "asus-vivobook-15" },
        "description": {
          "type": "string",
          "example": "Notebook Asus Vivobook 15, Intel Core i5-1334U, 16 GB RAM, SSD 512 GB."
        },
        "price": { "type": "string", "example": "529.99" },
        "stock": { "type": "integer", "example": 10 },
        "category_id": {
          "type": "string",
          "example": "9677869a-ea2a-4f54-b41c-fad2278799f9"
        },
        "image_url": {
          "type": "string",
          "example": "https://www.amazon.com/ASUS-Vivobook-i5-1334U-Champagne-F1504VA-AB56-PK/dp/B0DW1SK6P5"
        },
        "created_at": {
          "type": "string",
          "example": "2025-08-28T14:59:48.528Z"
        },
        "updated_at": {
          "type": "string",
          "example": "2025-08-28T14:59:48.528Z"
        }
      }
    },
    "CreateProductParams": {
      "type": "object",
      "properties": {
        "name": { "type": "string", "example": "Notebook" },
        "slug": { "type": "string", "example": "notebooks" },
        "price": { "type": "string", "example": 3500.0 },
        "stock": { "type": "number", "example": 21 },
        "description": {
          "type": "string",
          "example": "Notebook de alto desempenho com processador Intel Core i7, 16GB de memória RAM, SSD de 512GB e tela Full HD de 15,6 polegadas. Ideal para trabalho, estudos e jogos."
        },
        "categoryId": {
          "type": "string",
          "example": "3dc75813-28c7-4540-b9df-b4f6cdd3af1d"
        },
        "image_url": {
          "type": "string",
          "example": "https://www.amazon.com/ASUS-Vivobook-i5-1334U-Champagne-F1504VA-AB56-PK/dp/B0DW1SK6P5"
        }
      }
    },
    "UpdateProductParams": {
      "type": "object",
      "properties": {
        "name": { "type": "string", "example": "Notebook" },
        "slug": { "type": "string", "example": "notebooks" }
      }
    },
    "Cart": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "d80a3875-8483-4875-9cc3-bde28b0e6e6d"
        },
        "user_id": {
          "type": "string",
          "example": "699d2dce-3d29-4a6e-af7c-754d58d7326d"
        },
        "created_at": {
          "type": "string",
          "example": "2025-09-05T20:09:29.590Z"
        },
        "updated_at": {
          "type": "string",
          "example": "2025-09-05T20:09:29.590Z"
        },
        "items": {
          "type": "array",
          "items": { "$ref": "#/definitions/CartItem" }
        }
      }
    },
    "CreateCartParams": {
      "type": "object"
    },
    "CartItem": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "caf63b75-c4cd-4557-b015-606b532a9c39"
        },
        "cart_id": {
          "type": "string",
          "example": "5230d284-bc7f-44b9-8bb0-7c7baa08eaca"
        },
        "product_id": {
          "type": "string",
          "example": "9ca0c70c-0316-4b96-9c04-28899aef9150"
        },
        "quantity": { "type": "integer", "example": 25 },
        "product": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "example": "9ca0c70c-0316-4b96-9c04-28899aef9150"
            },
            "name": { "type": "string", "example": "Fone Sony WH-1000XM5" },
            "price": { "type": "string", "example": "299.99" },
            "image_url": {
              "type": "string",
              "example": "https://m.media-amazon.com/images/I/61dIwI+g8NL._AC_SL1500_.jpg"
            }
          }
        }
      }
    },
    "CreateCartItemParams": {
      "type": "object",
      "properties": {
        "cartId": { "type": "string", "example": "uuid" },
        "productId": { "type": "string", "example": "uuid" },
        "quantity": { "type": "number", "example": 2 }
      }
    },
    "UpdateCartItemParams": {
      "type": "object",
      "properties": {
        "quantity": { "type": "number", "example": 3 }
      }
    },
    "Order": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "ecfa94e2-a04c-4cb2-8f1d-3faeca758a71"
        },
        "userId": {
          "type": "string",
          "example": "bbb7e3f5-5788-4a88-81cf-ce3a8b20951c"
        },
        "orderDate": {
          "type": "string",
          "format": "date-time",
          "example": "2025-09-06T20:36:36.242Z"
        },
        "status": { "type": "string", "example": "pending" },
        "total": { "type": "string", "example": "1499.95" },
        "deliveryStreet": { "type": "string", "example": "Rua das Flores" },
        "deliveryNumber": { "type": "string", "example": "123" },
        "deliveryNeighborhood": {
          "type": "string",
          "example": "Jardim Primavera"
        },
        "deliveryComplement": { "type": "string", "example": "Apto 45" },
        "deliveryCity": { "type": "string", "example": "São Paulo" },
        "deliveryState": { "type": "string", "example": "SP" },
        "deliveryZipCode": { "type": "string", "example": "01234-567" },
        "document": { "type": "string", "example": "200.971.400-82" }
      }
    },
    "CreateOrderParams": {
      "type": "object",
      "properties": {
        "deliveryStreet": { "type": "string", "example": "Rua das Flores" },
        "deliveryNumber": { "type": "string", "example": "123" },
        "deliveryNeighborhood": {
          "type": "string",
          "example": "Jardim Primavera"
        },
        "deliveryComplement": { "type": "string", "example": "Apto 45" },
        "deliveryCity": { "type": "string", "example": "São Paulo" },
        "deliveryState": { "type": "string", "example": "SP" },
        "deliveryZipCode": { "type": "string", "example": "01234-567" },
        "document": { "type": "string", "example": "200.971.400-82" }
      }
    },
    "UpdateOrderParams": {
      "type": "object",
      "properties": {
        "status": { "type": "string", "example": "completed" }
      }
    },
    "Payment": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "627c7ba1-5a19-4b1b-8a1c-36d657271828"
        },
        "orderId": {
          "type": "string",
          "example": "ec6c3320-7815-4d37-91d5-492e2003dc1b"
        },
        "userId": {
          "type": "string",
          "example": "246f4f16-c50c-42ad-a766-74023c9428f8"
        },
        "method": { "type": "string", "example": "boleto" },
        "status": { "type": "string", "example": "pending" },
        "value": { "type": "string", "example": "1499.95" },
        "asaasPaymentId": {
          "type": "string",
          "example": "pay_6souhaw7dtnhs6mh"
        },
        "asaasCustomerId": { "type": "string", "example": "cus_000006999648" },
        "qrCodeUrl": { "type": "string", "nullable": true, "example": null },
        "invoiceUrl": { "type": "string", "nullable": true, "example": null },
        "cardLastDigits": {
          "type": "string",
          "nullable": true,
          "example": null
        },
        "dueDate": {
          "type": "string",
          "format": "date-time",
          "example": "2025-09-09T22:25:02.810Z"
        },
        "installmentCount": {
          "type": "integer",
          "nullable": true,
          "example": null
        },
        "installmentValue": {
          "type": "number",
          "nullable": true,
          "example": null
        },
        "billingType": { "type": "string", "example": "BOLETO" },
        "cardHolderName": {
          "type": "string",
          "nullable": true,
          "example": null
        },
        "cardExpiryMonth": {
          "type": "string",
          "nullable": true,
          "example": null
        },
        "cardExpiryYear": {
          "type": "string",
          "nullable": true,
          "example": null
        },
        "pixQrCode": { "type": "string", "nullable": true, "example": null },
        "pixKey": { "type": "string", "nullable": true, "example": null },
        "pixExpirationDate": {
          "type": "string",
          "format": "date-time",
          "nullable": true,
          "example": null
        },
        "paidAt": {
          "type": "string",
          "format": "date-time",
          "nullable": true,
          "example": null
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "example": "2025-09-06T22:25:02.809Z"
        }
      }
    },
    "CreatePaymentParams": {
      "type": "object",
      "properties": {
        "orderId": {
          "type": "string",
          "example": "ec6c3320-7815-4d37-91d5-492e2003dc1b"
        },
        "method": { "type": "string", "example": "boleto" },
        "asaas_customer_id": { "type": "string", "example": "cus_000006999648" }
      }
    },
    "InvalidParamsResponse": {
      "type": "object",
      "properties": {
        "message": { "type": "string", "example": "Parâmetro inválido" }
      }
    },
    "UnauthorizedErrorResponse": {
      "type": "object",
      "properties": {
        "message": { "type": "string", "example": "Unauthorized" }
      }
    },
    "NotFoundResponse": {
      "type": "object",
      "properties": {
        "message": { "type": "string", "example": "Not found" }
      }
    }
  }
}
